# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Run Qwen CLI'
author: 'Google LLC'
description: |-
  Invoke the Qwen CLI from a GitHub Action.

inputs:
  prompt:
    description: |-
      A string passed to the Qwen CLI's [`--prompt` argument](https://github.com/QwenLM/qwen-code/blob/main/docs/cli/configuration.md#command-line-arguments).
    required: false
    default: 'You are a helpful assistant.'
  settings:
    description: |-
      A JSON string written to `.qwen/settings.json` to configure the CLI's _project_ settings.
      For more details, see the documentation on [settings files](https://github.com/QwenLM/qwen-code/blob/main/docs/cli/configuration.md#settings-files).
    required: false
  openai_api_key:
    description: 'The API key for the OpenAI-compatible API (for Qwen).'
    required: false
  openai_base_url:
    description: 'The base URL for the OpenAI-compatible API.'
    required: false
  openai_model:
    description: 'The model name for the OpenAI-compatible API.'
    required: false
  gcp_project_id:
    description: 'The Google Cloud project ID.'
    required: false
  gcp_location:
    description: 'The Google Cloud location.'
    required: false
  gcp_workload_identity_provider:
    description: 'The Google Cloud Workload Identity Provider.'
    required: false
  gcp_service_account:
    description: 'The Google Cloud service account email.'
    required: false
  use_vertex_ai:
    description: 'A flag to indicate if Vertex AI should be used.'
    required: false
    default: 'false'
  use_qwen_code_assist:
    description: 'A flag to indicate if Qwen Code Assist should be used.'
    required: false
    default: 'false'
  qwen_cli_version:
    description: 'The version of the Qwen CLI to install.'
    required: false
    default: 'latest'

outputs:
  summary:
    description: 'The summarized output from the Qwen CLI execution.'
    value: '${{ steps.qwen_run.outputs.qwen_response }}'

runs:
  using: 'composite'
  steps:
    - name: 'Configure Qwen CLI'
      if: |-
        ${{ inputs.settings != '' }}
      run: |-
        mkdir -p .qwen/
        echo "${SETTINGS}" > ".qwen/settings.json"
      shell: 'bash'
      env:
        SETTINGS: '${{ inputs.settings }}'

    # - name: 'Authenticate to Google Cloud'
    #   if: |-
    #     ${{ inputs.gcp_workload_identity_provider != '' }}
    #   id: 'auth'
    #   uses: 'google-github-actions/auth@v2' # ratchet:exclude
    #   with:
    #     project_id: '${{ inputs.gcp_project_id }}'
    #     workload_identity_provider: '${{ inputs.gcp_workload_identity_provider }}'
    #     service_account: '${{ inputs.gcp_service_account }}'
    #     token_format: 'access_token'
    #     access_token_scopes: 'https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile'

    - name: 'Run Telemetry Collector for Google Cloud'
      if: |-
        ${{ inputs.gcp_workload_identity_provider != '' }}
      env:
        OTLP_GOOGLE_CLOUD_PROJECT: '${{ inputs.gcp_project_id }}'
        GITHUB_ACTION_PATH: '${{ github.action_path }}'
      shell: 'bash'
      run: |-
        set -euo pipefail
        mkdir -p .qwen/
        sed "s/OTLP_GOOGLE_CLOUD_PROJECT/${OTLP_GOOGLE_CLOUD_PROJECT}/g" "${GITHUB_ACTION_PATH}/scripts/collector-gcp.yaml.template" > ".qwen/collector-gcp.yaml"

        chmod 444 "$GOOGLE_APPLICATION_CREDENTIALS"
        docker run -d --name qwen-telemetry-collector --network host \
          -v "${GITHUB_WORKSPACE}:/github/workspace" \
          -e "GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS/$GITHUB_WORKSPACE//github/workspace}" \
          -w "/github/workspace" \
          otel/opentelemetry-collector-contrib:0.128.0 \
          --config /github/workspace/.qwen/collector-gcp.yaml

    - name: 'Install Qwen CLI'
      id: 'install'
      env:
        QWEN_CLI_VERSION: '${{ inputs.qwen_cli_version }}'
      shell: 'bash'
      run: |-
        set -euo pipefail

        VERSION_INPUT="${QWEN_CLI_VERSION:-latest}"

        if [[ "${VERSION_INPUT}" == "latest" || "${VERSION_INPUT}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.-]+)?(\+[a-zA-Z0-9\.-]+)?$ ]]; then
          echo "Installing Qwen CLI from npm: @qwen-code/qwen-code@${VERSION_INPUT}"
          npm install -g @qwen-code/qwen-code@"${VERSION_INPUT}"
        else
          echo "Installing Qwen CLI from GitHub: github:QwenLM/qwen-code#${VERSION_INPUT}"
          git clone https://github.com/QwenLM/qwen-code.git
          cd qwen-code
          git checkout "${VERSION_INPUT}"
          npm install
          npm run bundle
          npm install -g .
        fi
        echo "Verifying installation:"
        if command -v qwen >/dev/null 2>&1; then
          qwen --version || echo "Qwen CLI installed successfully (version command not available)"
        else
          echo "Error: Qwen CLI not found in PATH"
          exit 1
        fi

    - name: 'Run Qwen CLI'
      id: 'qwen_run'
      run: |-
        set -e
        QWEN_RESPONSE=$(qwen --yolo --prompt "${PROMPT}")
        # Set the captured response as a step output, supporting multiline
        echo "qwen_response<<EOF" >> "${GITHUB_OUTPUT}"
        echo "${QWEN_RESPONSE}" >> "${GITHUB_OUTPUT}"
        echo "EOF" >> "${GITHUB_OUTPUT}"
        echo "${QWEN_RESPONSE}"
      shell: 'bash'
      env:
        OPENAI_API_KEY: '${{ inputs.openai_api_key }}'
        OPENAI_BASE_URL: '${{ inputs.openai_base_url }}'
        OPENAI_MODEL: '${{ inputs.openai_model }}'
        SURFACE: 'GitHub'
        GOOGLE_CLOUD_PROJECT: '${{ inputs.gcp_project_id }}'
        GOOGLE_CLOUD_LOCATION: '${{ inputs.gcp_location }}'
        GOOGLE_GENAI_USE_VERTEXAI: '${{ inputs.use_vertex_ai }}'
        GOOGLE_GENAI_USE_GCA: '${{ inputs.use_qwen_code_assist }}'
        GOOGLE_CLOUD_ACCESS_TOKEN: '${{steps.auth.outputs.access_token}}'
        PROMPT: '${{ inputs.prompt }}'

branding:
  icon: 'terminal'
  color: 'blue'
